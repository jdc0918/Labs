[tcsetpgrp failed in terminal_inferior: Inappropriate ioctl for device]
[tcsetpgrp failed in terminal_inferior: Inappropriate ioctl for device]
[tcsetpgrp failed in terminal_inferior: Inappropriate ioctl for device]

Program received signal SIGSEGV, Segmentation fault.
0x00000000004042fb in main (argc=2, argv=0x7fffffffddb8) at csvParser.cpp:68
68	csvParser.cpp: No such file or directory.

Found_with_CERT_BFF_2.8
Running: /home/cs6340/csvParser /home/cs6340/fuzzing/campaign_6UAdOj/iteration_JDL2ns/BFF_testcase_psVLG3/sf_987dd60dc962e6d702a64cc084c3cb01-314.csv

Description: Access violation near NULL on source operand
Short description: SourceAvNearNull (16/22)
Hash: eac5f07517046cbd92920a8607d3ff9f.eac5f07517046cbd92920a8607d3ff9f
Exploitability Classification: PROBABLY_NOT_EXPLOITABLE
Explanation: The target crashed on an access violation at an address matching the source operand of the current instruction. This likely indicates a read access violation, which may mean the application crashed on a simple NULL dereference to data structure that has no immediate effect on control of the processor.
Other tags: AccessViolation (21/22)

process 24555
Mapped address spaces:

          Start Addr           End Addr       Size     Offset objfile
            0x400000           0x456000    0x56000        0x0 /home/cs6340/csvParser
            0x655000           0x656000     0x1000    0x55000 /home/cs6340/csvParser
            0x656000           0x657000     0x1000    0x56000 /home/cs6340/csvParser
            0x657000           0x689000    0x32000        0x0 [heap]
      0x7ffff716c000     0x7ffff732c000   0x1c0000        0x0 /lib/x86_64-linux-gnu/libc-2.23.so
      0x7ffff732c000     0x7ffff752c000   0x200000   0x1c0000 /lib/x86_64-linux-gnu/libc-2.23.so
      0x7ffff752c000     0x7ffff7530000     0x4000   0x1c0000 /lib/x86_64-linux-gnu/libc-2.23.so
      0x7ffff7530000     0x7ffff7532000     0x2000   0x1c4000 /lib/x86_64-linux-gnu/libc-2.23.so
      0x7ffff7532000     0x7ffff7536000     0x4000        0x0 
      0x7ffff7536000     0x7ffff754c000    0x16000        0x0 /lib/x86_64-linux-gnu/libgcc_s.so.1
      0x7ffff754c000     0x7ffff774b000   0x1ff000    0x16000 /lib/x86_64-linux-gnu/libgcc_s.so.1
      0x7ffff774b000     0x7ffff774c000     0x1000    0x15000 /lib/x86_64-linux-gnu/libgcc_s.so.1
      0x7ffff774c000     0x7ffff7854000   0x108000        0x0 /lib/x86_64-linux-gnu/libm-2.23.so
      0x7ffff7854000     0x7ffff7a53000   0x1ff000   0x108000 /lib/x86_64-linux-gnu/libm-2.23.so
      0x7ffff7a53000     0x7ffff7a54000     0x1000   0x107000 /lib/x86_64-linux-gnu/libm-2.23.so
      0x7ffff7a54000     0x7ffff7a55000     0x1000   0x108000 /lib/x86_64-linux-gnu/libm-2.23.so
      0x7ffff7a55000     0x7ffff7bc7000   0x172000        0x0 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
      0x7ffff7bc7000     0x7ffff7dc7000   0x200000   0x172000 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
      0x7ffff7dc7000     0x7ffff7dd1000     0xa000   0x172000 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
      0x7ffff7dd1000     0x7ffff7dd3000     0x2000   0x17c000 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
      0x7ffff7dd3000     0x7ffff7dd7000     0x4000        0x0 
      0x7ffff7dd7000     0x7ffff7dfd000    0x26000        0x0 /lib/x86_64-linux-gnu/ld-2.23.so
      0x7ffff7fda000     0x7ffff7fe0000     0x6000        0x0 
      0x7ffff7ff7000     0x7ffff7ffa000     0x3000        0x0 [vvar]
      0x7ffff7ffa000     0x7ffff7ffc000     0x2000        0x0 [vdso]
      0x7ffff7ffc000     0x7ffff7ffd000     0x1000    0x25000 /lib/x86_64-linux-gnu/ld-2.23.so
      0x7ffff7ffd000     0x7ffff7ffe000     0x1000    0x26000 /lib/x86_64-linux-gnu/ld-2.23.so
      0x7ffff7ffe000     0x7ffff7fff000     0x1000        0x0 
      0x7ffffffde000     0x7ffffffff000    0x21000        0x0 [stack]
  0xffffffffff600000 0xffffffffff601000     0x1000        0x0 [vsyscall]

siginfo:$1 = {si_signo = 11, si_errno = 0, si_code = 1, _sifields = {_pad = {0, 0, 0, 0, 0, 0, 39696320, 0, -660280464, 32728, -2120074476, 32764, 39696320, 0, 5863560, 0, 0, 0, 44, 0, 0, 0, 4211451, 0, 14281408, 0, 0, 0}, _kill = {si_pid = 0, si_uid = 0}, _timer = {si_tid = 0, si_overrun = 0, si_sigval = {sival_int = 0, sival_ptr = 0x0}}, _rt = {si_pid = 0, si_uid = 0, si_sigval = {sival_int = 0, sival_ptr = 0x0}}, _sigchld = {si_pid = 0, si_uid = 0, si_status = 0, si_utime = 0, si_stime = 170494396171550720}, _sigfault = {si_addr = 0x0, _addr_lsb = 0, _addr_bnd = {_lower = 0x0, _upper = 0x25db7c0}}, _sigpoll = {si_band = 0, si_fd = 0}}}
si_addr:$2 = (void *) 0x0

#0  0x00000000004042fb in main (argc=2, argv=0x7fffffffddb8) at csvParser.cpp:68
        ascii = {static icase = (unknown: 1), static nosubs = (unknown: 2), static optimize = (unknown: 4), static collate = (unknown: 8), static ECMAScript = (unknown: 16), static basic = (unknown: 32), static extended = (unknown: 64), static awk = (unknown: 128), static grep = (unknown: 256), static egrep = (unknown: 512), _M_flags = (unknown: 16), _M_loc = {static none = 0, static ctype = 1, static numeric = 2, static collate = 4, static time = 8, static monetary = 16, static messages = 32, static all = 63, _M_impl = 0x7ffff7dd57a0, static _S_classic = <optimized out>, static _S_global = <optimized out>, static _S_categories = <optimized out>, static _S_once = <optimized out>, static _S_twinned_facets = <optimized out>}, _M_automaton = warning: RTTI symbol not found for class 'std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>'
warning: RTTI symbol not found for class 'std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>'
std::shared_ptr (count 1, weak 0) 0x66bf30}
        my_regex = {static icase = (unknown: 1), static nosubs = (unknown: 2), static optimize = (unknown: 4), static collate = (unknown: 8), static ECMAScript = (unknown: 16), static basic = (unknown: 32), static extended = (unknown: 64), static awk = (unknown: 128), static grep = (unknown: 256), static egrep = (unknown: 512), _M_flags = (unknown: 16), _M_loc = {static none = 0, static ctype = 1, static numeric = 2, static collate = 4, static time = 8, static monetary = 16, static messages = 32, static all = 63, _M_impl = 0x7ffff7dd57a0, static _S_classic = <optimized out>, static _S_global = <optimized out>, static _S_categories = <optimized out>, static _S_once = <optimized out>, static _S_twinned_facets = <optimized out>}, _M_automaton = std::shared_ptr (expired, weak 0) 0x66bff0}
        i = {_M_position = {_M_begin = <error reading variable>, _M_subs = std::vector of length 0, capacity 1, _M_suffix = {<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >> = {first = <error reading variable>, _M_n = 0, _M_result = 0x0, _M_has_m1 = false}
        count = 5
        newFields = 0x66c3a8
        reg = <incomplete type>
        j = {_M_position = {_M_begin = <error reading variable>, _M_subs = std::vector of length 0, capacity 0, _M_suffix = {<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >> = {first = <error reading variable>, _M_n = 0, _M_result = 0x0, _M_has_m1 = false}
        fields = 0x66cf78
        infile = <incomplete type>
        line = <incomplete type>
        lineCount = 2
        maxLineCount = 4
        myCsv = 0x66c4b0

rax            0x0	0
rbx            0x0	0
rcx            0x0	0
rdx            0x14	20
rsi            0x7ffff7530b50	140737342802768
rdi            0x7fffffffd9c8	140737488345544
rbp            0x7fffffffdcd0	0x7fffffffdcd0
rsp            0x7fffffffd5a0	0x7fffffffd5a0
r8             0x66bfe0	6733792
r9             0x0	0
r10            0x7ffff7530b78	140737342802808
r11            0x7ffff7530b78	140737342802808
r12            0x4039f0	4209136
r13            0x7fffffffddb0	140737488346544
r14            0x0	0
r15            0x0	0
rip            0x4042fb	0x4042fb <main(int, char**)+2059>
eflags         0x10202	[ IF RF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0

=> 0x4042fb <main(int, char**)+2059>:	mov    ecx,DWORD PTR [rax]

Dump of assembler code for function main(int, char**):
   0x0000000000403af0 <+0>:	push   rbp
   0x0000000000403af1 <+1>:	mov    rbp,rsp
   0x0000000000403af4 <+4>:	sub    rsp,0x730
   0x0000000000403afb <+11>:	mov    DWORD PTR [rbp-0x4],0x0
   0x0000000000403b02 <+18>:	mov    DWORD PTR [rbp-0x8],edi
   0x0000000000403b05 <+21>:	mov    QWORD PTR [rbp-0x10],rsi
   0x0000000000403b09 <+25>:	lea    rsi,[rbp-0x218]
   0x0000000000403b10 <+32>:	mov    rdi,rsi
   0x0000000000403b13 <+35>:	mov    QWORD PTR [rbp-0x560],rsi
   0x0000000000403b1a <+42>:	call   0x403640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev@plt>
   0x0000000000403b1f <+47>:	mov    rsi,QWORD PTR [rbp-0x10]
   0x0000000000403b23 <+51>:	mov    rsi,QWORD PTR [rsi+0x8]
   0x0000000000403b27 <+55>:	mov    edx,0x8
   0x0000000000403b2c <+60>:	mov    rdi,QWORD PTR [rbp-0x560]
   0x0000000000403b33 <+67>:	call   0x403470 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@plt>
   0x0000000000403b38 <+72>:	jmp    0x403b3d <main(int, char**)+77>
   0x0000000000403b3d <+77>:	mov    rax,QWORD PTR [rbp-0x218]
   0x0000000000403b44 <+84>:	mov    rax,QWORD PTR [rax-0x18]
   0x0000000000403b48 <+88>:	lea    rdi,[rbp+rax*1-0x218]
   0x0000000000403b50 <+96>:	call   0x4033a0 <_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@plt>
   0x0000000000403b55 <+101>:	mov    BYTE PTR [rbp-0x561],al
   0x0000000000403b5b <+107>:	jmp    0x403b60 <main(int, char**)+112>
   0x0000000000403b60 <+112>:	mov    al,BYTE PTR [rbp-0x561]
   0x0000000000403b66 <+118>:	test   al,0x1
   0x0000000000403b68 <+120>:	jne    0x403b73 <main(int, char**)+131>
   0x0000000000403b6e <+126>:	jmp    0x403b9d <main(int, char**)+173>
   0x0000000000403b73 <+131>:	mov    DWORD PTR [rbp-0x4],0x1
   0x0000000000403b7a <+138>:	mov    DWORD PTR [rbp-0x228],0x1
   0x0000000000403b84 <+148>:	jmp    0x404947 <main(int, char**)+3671>
   0x0000000000403b89 <+153>:	mov    ecx,edx
   0x0000000000403b8b <+155>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000403b92 <+162>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000403b98 <+168>:	jmp    0x40495f <main(int, char**)+3695>
   0x0000000000403b9d <+173>:	lea    rdi,[rbp-0x248]
   0x0000000000403ba4 <+180>:	call   0x4036d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
   0x0000000000403ba9 <+185>:	mov    DWORD PTR [rbp-0x24c],0x1
   0x0000000000403bb3 <+195>:	mov    DWORD PTR [rbp-0x250],0x1
   0x0000000000403bbd <+205>:	movsxd rax,DWORD PTR [rbp-0x250]
   0x0000000000403bc4 <+212>:	mov    ecx,0x8
   0x0000000000403bc9 <+217>:	mov    edi,ecx
   0x0000000000403bcb <+219>:	mul    rdi
   0x0000000000403bce <+222>:	mov    rdx,0xffffffffffffffff
   0x0000000000403bd5 <+229>:	cmovo  rax,rdx
   0x0000000000403bd9 <+233>:	mov    rdi,rax
   0x0000000000403bdc <+236>:	call   0x403230 <_Znam@plt>
   0x0000000000403be1 <+241>:	mov    QWORD PTR [rbp-0x570],rax
   0x0000000000403be8 <+248>:	jmp    0x403bed <main(int, char**)+253>
   0x0000000000403bed <+253>:	mov    rax,QWORD PTR [rbp-0x570]
   0x0000000000403bf4 <+260>:	mov    QWORD PTR [rbp-0x258],rax
   0x0000000000403bfb <+267>:	mov    rax,QWORD PTR [rbp-0x218]
   0x0000000000403c02 <+274>:	mov    rax,QWORD PTR [rax-0x18]
   0x0000000000403c06 <+278>:	lea    rdi,[rbp+rax*1-0x218]
   0x0000000000403c0e <+286>:	call   0x403850 <_ZNKSt9basic_iosIcSt11char_traitsIcEE3eofEv@plt>
   0x0000000000403c13 <+291>:	mov    BYTE PTR [rbp-0x571],al
   0x0000000000403c19 <+297>:	jmp    0x403c1e <main(int, char**)+302>
   0x0000000000403c1e <+302>:	mov    al,BYTE PTR [rbp-0x571]
   0x0000000000403c24 <+308>:	xor    al,0xff
   0x0000000000403c26 <+310>:	test   al,0x1
   0x0000000000403c28 <+312>:	jne    0x403c33 <main(int, char**)+323>
   0x0000000000403c2e <+318>:	jmp    0x4048f2 <main(int, char**)+3586>
   0x0000000000403c33 <+323>:	lea    rdi,[rbp-0x218]
   0x0000000000403c3a <+330>:	lea    rsi,[rbp-0x248]
   0x0000000000403c41 <+337>:	call   0x403290 <_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x0000000000403c46 <+342>:	mov    QWORD PTR [rbp-0x580],rax
   0x0000000000403c4d <+349>:	jmp    0x403c52 <main(int, char**)+354>
   0x0000000000403c52 <+354>:	mov    eax,0x656820
   0x0000000000403c57 <+359>:	mov    edi,eax
   0x0000000000403c59 <+361>:	lea    rsi,[rbp-0x248]
   0x0000000000403c60 <+368>:	call   0x403560 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x0000000000403c65 <+373>:	mov    QWORD PTR [rbp-0x588],rax
   0x0000000000403c6c <+380>:	jmp    0x403c71 <main(int, char**)+385>
   0x0000000000403c71 <+385>:	mov    eax,0x4033c0
   0x0000000000403c76 <+390>:	mov    esi,eax
   0x0000000000403c78 <+392>:	mov    rdi,QWORD PTR [rbp-0x588]
   0x0000000000403c7f <+399>:	call   0x4035d0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000403c84 <+404>:	mov    QWORD PTR [rbp-0x590],rax
   0x0000000000403c8b <+411>:	jmp    0x403c90 <main(int, char**)+416>
   0x0000000000403c90 <+416>:	mov    edi,DWORD PTR [rbp-0x24c]
   0x0000000000403c96 <+422>:	mov    esi,DWORD PTR [rbp-0x250]
   0x0000000000403c9c <+428>:	call   0x404980 <checkLine(int, int)>
   0x0000000000403ca1 <+433>:	mov    BYTE PTR [rbp-0x591],al
   0x0000000000403ca7 <+439>:	jmp    0x403cac <main(int, char**)+444>
   0x0000000000403cac <+444>:	mov    al,BYTE PTR [rbp-0x591]
   0x0000000000403cb2 <+450>:	test   al,0x1
   0x0000000000403cb4 <+452>:	jne    0x403cbf <main(int, char**)+463>
   0x0000000000403cba <+458>:	jmp    0x403ef1 <main(int, char**)+1025>
   0x0000000000403cbf <+463>:	mov    eax,DWORD PTR [rbp-0x250]
   0x0000000000403cc5 <+469>:	add    eax,eax
   0x0000000000403cc7 <+471>:	mov    DWORD PTR [rbp-0x250],eax
   0x0000000000403ccd <+477>:	movsxd rax,DWORD PTR [rbp-0x250]
   0x0000000000403cd4 <+484>:	mov    ecx,0x8
   0x0000000000403cd9 <+489>:	mov    edx,ecx
   0x0000000000403cdb <+491>:	mul    rdx
   0x0000000000403cde <+494>:	mov    rdx,0xffffffffffffffff
   0x0000000000403ce5 <+501>:	cmovo  rax,rdx
   0x0000000000403ce9 <+505>:	mov    rdi,rax
   0x0000000000403cec <+508>:	call   0x403230 <_Znam@plt>
   0x0000000000403cf1 <+513>:	mov    QWORD PTR [rbp-0x5a0],rax
   0x0000000000403cf8 <+520>:	jmp    0x403cfd <main(int, char**)+525>
   0x0000000000403cfd <+525>:	mov    rax,QWORD PTR [rbp-0x5a0]
   0x0000000000403d04 <+532>:	mov    QWORD PTR [rbp-0x260],rax
   0x0000000000403d0b <+539>:	mov    DWORD PTR [rbp-0x264],0x0
   0x0000000000403d15 <+549>:	mov    eax,DWORD PTR [rbp-0x264]
   0x0000000000403d1b <+555>:	cmp    eax,DWORD PTR [rbp-0x24c]
   0x0000000000403d21 <+561>:	jge    0x403ebc <main(int, char**)+972>
   0x0000000000403d27 <+567>:	mov    DWORD PTR [rbp-0x268],0x0
   0x0000000000403d31 <+577>:	movsxd rax,DWORD PTR [rbp-0x268]
   0x0000000000403d38 <+584>:	mov    ecx,0x20
   0x0000000000403d3d <+589>:	mov    edx,ecx
   0x0000000000403d3f <+591>:	mov    QWORD PTR [rbp-0x5a8],rax
   0x0000000000403d46 <+598>:	mul    rdx
   0x0000000000403d49 <+601>:	pushf  
   0x0000000000403d4a <+602>:	pop    rdx
   0x0000000000403d4b <+603>:	add    rax,0x8
   0x0000000000403d4f <+607>:	mov    rsi,0xffffffffffffffff
   0x0000000000403d56 <+614>:	cmovb  rax,rsi
   0x0000000000403d5a <+618>:	push   rdx
   0x0000000000403d5b <+619>:	popf   
   0x0000000000403d5c <+620>:	cmovo  rax,rsi
   0x0000000000403d60 <+624>:	mov    rdi,rax
   0x0000000000403d63 <+627>:	call   0x403230 <_Znam@plt>
   0x0000000000403d68 <+632>:	mov    QWORD PTR [rbp-0x5b0],rax
   0x0000000000403d6f <+639>:	jmp    0x403d74 <main(int, char**)+644>
   0x0000000000403d74 <+644>:	mov    rax,QWORD PTR [rbp-0x5b0]
   0x0000000000403d7b <+651>:	mov    rcx,QWORD PTR [rbp-0x5a8]
   0x0000000000403d82 <+658>:	mov    QWORD PTR [rax],rcx
   0x0000000000403d85 <+661>:	add    rax,0x8
   0x0000000000403d89 <+665>:	cmp    rcx,0x0
   0x0000000000403d8d <+669>:	mov    QWORD PTR [rbp-0x5b8],rax
   0x0000000000403d94 <+676>:	je     0x403dfc <main(int, char**)+780>
   0x0000000000403d9a <+682>:	mov    rax,QWORD PTR [rbp-0x5a8]
   0x0000000000403da1 <+689>:	shl    rax,0x5
   0x0000000000403da5 <+693>:	mov    rcx,QWORD PTR [rbp-0x5b8]
   0x0000000000403dac <+700>:	add    rcx,rax
   0x0000000000403daf <+703>:	mov    rax,QWORD PTR [rbp-0x5b8]
   0x0000000000403db6 <+710>:	mov    QWORD PTR [rbp-0x5c0],rcx
   0x0000000000403dbd <+717>:	mov    QWORD PTR [rbp-0x5c8],rax
   0x0000000000403dc4 <+724>:	mov    rax,QWORD PTR [rbp-0x5c8]
   0x0000000000403dcb <+731>:	mov    rdi,rax
   0x0000000000403dce <+734>:	mov    QWORD PTR [rbp-0x5d0],rax
   0x0000000000403dd5 <+741>:	call   0x4036d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
   0x0000000000403dda <+746>:	mov    rax,QWORD PTR [rbp-0x5d0]
   0x0000000000403de1 <+753>:	add    rax,0x20
   0x0000000000403de5 <+757>:	mov    rdi,QWORD PTR [rbp-0x5c0]
   0x0000000000403dec <+764>:	cmp    rax,rdi
   0x0000000000403def <+767>:	mov    QWORD PTR [rbp-0x5c8],rax
   0x0000000000403df6 <+774>:	jne    0x403dc4 <main(int, char**)+724>
   0x0000000000403dfc <+780>:	movsxd rax,DWORD PTR [rbp-0x264]
   0x0000000000403e03 <+787>:	mov    rcx,QWORD PTR [rbp-0x260]
   0x0000000000403e0a <+794>:	mov    rdx,QWORD PTR [rbp-0x5b8]
   0x0000000000403e11 <+801>:	mov    QWORD PTR [rcx+rax*8],rdx
   0x0000000000403e15 <+805>:	mov    DWORD PTR [rbp-0x26c],0x0
   0x0000000000403e1f <+815>:	mov    eax,DWORD PTR [rbp-0x26c]
   0x0000000000403e25 <+821>:	cmp    eax,DWORD PTR [rbp-0x268]
   0x0000000000403e2b <+827>:	jge    0x403ea3 <main(int, char**)+947>
   0x0000000000403e31 <+833>:	movsxd rax,DWORD PTR [rbp-0x26c]
   0x0000000000403e38 <+840>:	movsxd rcx,DWORD PTR [rbp-0x264]
   0x0000000000403e3f <+847>:	mov    rdx,QWORD PTR [rbp-0x260]
   0x0000000000403e46 <+854>:	mov    rdx,QWORD PTR [rdx+rcx*8]
   0x0000000000403e4a <+858>:	shl    rax,0x5
   0x0000000000403e4e <+862>:	add    rdx,rax
   0x0000000000403e51 <+865>:	mov    rsi,QWORD PTR [rbp-0x258]
   0x0000000000403e58 <+872>:	mov    rcx,QWORD PTR [rsi+rcx*8]
   0x0000000000403e5c <+876>:	add    rcx,rax
   0x0000000000403e5f <+879>:	mov    rdi,rdx
   0x0000000000403e62 <+882>:	mov    rsi,rcx
   0x0000000000403e65 <+885>:	call   0x403250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt>
   0x0000000000403e6a <+890>:	mov    QWORD PTR [rbp-0x5d8],rax
   0x0000000000403e71 <+897>:	jmp    0x403e76 <main(int, char**)+902>
   0x0000000000403e76 <+902>:	jmp    0x403e7b <main(int, char**)+907>
   0x0000000000403e7b <+907>:	mov    eax,DWORD PTR [rbp-0x26c]
   0x0000000000403e81 <+913>:	add    eax,0x1
   0x0000000000403e84 <+916>:	mov    DWORD PTR [rbp-0x26c],eax
   0x0000000000403e8a <+922>:	jmp    0x403e1f <main(int, char**)+815>
   0x0000000000403e8f <+927>:	mov    ecx,edx
   0x0000000000403e91 <+929>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000403e98 <+936>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000403e9e <+942>:	jmp    0x404936 <main(int, char**)+3654>
   0x0000000000403ea3 <+947>:	jmp    0x403ea8 <main(int, char**)+952>
   0x0000000000403ea8 <+952>:	mov    eax,DWORD PTR [rbp-0x264]
   0x0000000000403eae <+958>:	add    eax,0x1
   0x0000000000403eb1 <+961>:	mov    DWORD PTR [rbp-0x264],eax
   0x0000000000403eb7 <+967>:	jmp    0x403d15 <main(int, char**)+549>
   0x0000000000403ebc <+972>:	mov    rax,QWORD PTR [rbp-0x258]
   0x0000000000403ec3 <+979>:	cmp    rax,0x0
   0x0000000000403ec7 <+983>:	mov    QWORD PTR [rbp-0x5e0],rax
   0x0000000000403ece <+990>:	je     0x403ee3 <main(int, char**)+1011>
   0x0000000000403ed4 <+996>:	mov    rax,QWORD PTR [rbp-0x5e0]
   0x0000000000403edb <+1003>:	mov    rdi,rax
   0x0000000000403ede <+1006>:	call   0x403690 <_ZdaPv@plt>
   0x0000000000403ee3 <+1011>:	mov    rax,QWORD PTR [rbp-0x260]
   0x0000000000403eea <+1018>:	mov    QWORD PTR [rbp-0x258],rax
   0x0000000000403ef1 <+1025>:	mov    eax,0x43b44f
   0x0000000000403ef6 <+1030>:	mov    esi,eax
   0x0000000000403ef8 <+1032>:	lea    rdi,[rbp-0x290]
   0x0000000000403eff <+1039>:	mov    edx,0x10
   0x0000000000403f04 <+1044>:	call   0x404c00 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex(char const*, std::regex_constants::syntax_option_type)>
   0x0000000000403f09 <+1049>:	jmp    0x403f0e <main(int, char**)+1054>
   0x0000000000403f0e <+1054>:	lea    rax,[rbp-0x248]
   0x0000000000403f15 <+1061>:	mov    rdi,rax
   0x0000000000403f18 <+1064>:	mov    QWORD PTR [rbp-0x5e8],rax
   0x0000000000403f1f <+1071>:	call   0x403540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt>
   0x0000000000403f24 <+1076>:	mov    QWORD PTR [rbp-0x298],rax
   0x0000000000403f2b <+1083>:	mov    rdi,QWORD PTR [rbp-0x5e8]
   0x0000000000403f32 <+1090>:	call   0x403410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@plt>
   0x0000000000403f37 <+1095>:	mov    QWORD PTR [rbp-0x2a0],rax
   0x0000000000403f3e <+1102>:	mov    rdi,QWORD PTR [rbp-0x298]
   0x0000000000403f45 <+1109>:	lea    rdx,[rbp-0x290]
   0x0000000000403f4c <+1116>:	xor    ecx,ecx
   0x0000000000403f4e <+1118>:	mov    rsi,rax
   0x0000000000403f51 <+1121>:	call   0x404c60 <std::regex_search<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> > const&, std::regex_constants::match_flag_type)>
   0x0000000000403f56 <+1126>:	mov    BYTE PTR [rbp-0x5e9],al
   0x0000000000403f5c <+1132>:	jmp    0x403f61 <main(int, char**)+1137>
   0x0000000000403f61 <+1137>:	mov    al,BYTE PTR [rbp-0x5e9]
   0x0000000000403f67 <+1143>:	test   al,0x1
   0x0000000000403f69 <+1145>:	jne    0x403f74 <main(int, char**)+1156>
   0x0000000000403f6f <+1151>:	jmp    0x40420a <main(int, char**)+1818>
   0x0000000000403f74 <+1156>:	mov    eax,0x656820
   0x0000000000403f79 <+1161>:	mov    edi,eax
   0x0000000000403f7b <+1163>:	mov    eax,0x43b45d
   0x0000000000403f80 <+1168>:	mov    esi,eax
   0x0000000000403f82 <+1170>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000403f87 <+1175>:	mov    QWORD PTR [rbp-0x5f8],rax
   0x0000000000403f8e <+1182>:	jmp    0x403f93 <main(int, char**)+1187>
   0x0000000000403f93 <+1187>:	lea    rsi,[rbp-0x248]
   0x0000000000403f9a <+1194>:	mov    rdi,QWORD PTR [rbp-0x5f8]
   0x0000000000403fa1 <+1201>:	call   0x403560 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x0000000000403fa6 <+1206>:	mov    QWORD PTR [rbp-0x600],rax
   0x0000000000403fad <+1213>:	jmp    0x403fb2 <main(int, char**)+1218>
   0x0000000000403fb2 <+1218>:	mov    eax,0x4033c0
   0x0000000000403fb7 <+1223>:	mov    esi,eax
   0x0000000000403fb9 <+1225>:	mov    rdi,QWORD PTR [rbp-0x600]
   0x0000000000403fc0 <+1232>:	call   0x4035d0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000403fc5 <+1237>:	mov    QWORD PTR [rbp-0x608],rax
   0x0000000000403fcc <+1244>:	jmp    0x403fd1 <main(int, char**)+1249>
   0x0000000000403fd1 <+1249>:	mov    DWORD PTR [rbp-0x2a4],0x0
   0x0000000000403fdb <+1259>:	lea    rdi,[rbp-0x248]
   0x0000000000403fe2 <+1266>:	movsxd rax,DWORD PTR [rbp-0x2a4]
   0x0000000000403fe9 <+1273>:	mov    QWORD PTR [rbp-0x610],rax
   0x0000000000403ff0 <+1280>:	call   0x403740 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@plt>
   0x0000000000403ff5 <+1285>:	mov    rdi,QWORD PTR [rbp-0x610]
   0x0000000000403ffc <+1292>:	cmp    rdi,rax
   0x0000000000403fff <+1295>:	jae    0x4041a8 <main(int, char**)+1720>
   0x0000000000404005 <+1301>:	movsxd rsi,DWORD PTR [rbp-0x2a4]
   0x000000000040400c <+1308>:	lea    rdi,[rbp-0x248]
   0x0000000000404013 <+1315>:	call   0x4038c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
   0x0000000000404018 <+1320>:	mov    QWORD PTR [rbp-0x618],rax
   0x000000000040401f <+1327>:	jmp    0x404024 <main(int, char**)+1332>
   0x0000000000404024 <+1332>:	mov    rax,QWORD PTR [rbp-0x618]
   0x000000000040402b <+1339>:	movzx  ecx,BYTE PTR [rax]
   0x000000000040402e <+1342>:	add    ecx,0xffffff80
   0x0000000000404031 <+1345>:	mov    dl,cl
   0x0000000000404033 <+1347>:	movsxd rsi,DWORD PTR [rbp-0x2a4]
   0x000000000040403a <+1354>:	lea    rdi,[rbp-0x248]
   0x0000000000404041 <+1361>:	mov    BYTE PTR [rbp-0x619],dl
   0x0000000000404047 <+1367>:	call   0x4038c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
   0x000000000040404c <+1372>:	mov    QWORD PTR [rbp-0x628],rax
   0x0000000000404053 <+1379>:	jmp    0x404058 <main(int, char**)+1384>
   0x0000000000404058 <+1384>:	mov    rax,QWORD PTR [rbp-0x628]
   0x000000000040405f <+1391>:	mov    cl,BYTE PTR [rbp-0x619]
   0x0000000000404065 <+1397>:	mov    BYTE PTR [rax],cl
   0x0000000000404067 <+1399>:	movsxd rsi,DWORD PTR [rbp-0x2a4]
   0x000000000040406e <+1406>:	lea    rdi,[rbp-0x248]
   0x0000000000404075 <+1413>:	call   0x4038c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
   0x000000000040407a <+1418>:	mov    QWORD PTR [rbp-0x630],rax
   0x0000000000404081 <+1425>:	jmp    0x404086 <main(int, char**)+1430>
   0x0000000000404086 <+1430>:	mov    rax,QWORD PTR [rbp-0x630]
   0x000000000040408d <+1437>:	movsx  ecx,BYTE PTR [rax]
   0x0000000000404090 <+1440>:	cmp    ecx,0x0
   0x0000000000404093 <+1443>:	jl     0x4040cb <main(int, char**)+1499>
   0x0000000000404099 <+1449>:	movsxd rsi,DWORD PTR [rbp-0x2a4]
   0x00000000004040a0 <+1456>:	lea    rdi,[rbp-0x248]
   0x00000000004040a7 <+1463>:	call   0x4038c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
   0x00000000004040ac <+1468>:	mov    QWORD PTR [rbp-0x638],rax
   0x00000000004040b3 <+1475>:	jmp    0x4040b8 <main(int, char**)+1480>
   0x00000000004040b8 <+1480>:	mov    rax,QWORD PTR [rbp-0x638]
   0x00000000004040bf <+1487>:	movsx  ecx,BYTE PTR [rax]
   0x00000000004040c2 <+1490>:	cmp    ecx,0x7f
   0x00000000004040c5 <+1493>:	jle    0x40416b <main(int, char**)+1659>
   0x00000000004040cb <+1499>:	mov    eax,0x656820
   0x00000000004040d0 <+1504>:	mov    edi,eax
   0x00000000004040d2 <+1506>:	mov    eax,0x43b474
   0x00000000004040d7 <+1511>:	mov    esi,eax
   0x00000000004040d9 <+1513>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004040de <+1518>:	mov    QWORD PTR [rbp-0x640],rax
   0x00000000004040e5 <+1525>:	jmp    0x4040ea <main(int, char**)+1530>
   0x00000000004040ea <+1530>:	movsxd rax,DWORD PTR [rbp-0x2a4]
   0x00000000004040f1 <+1537>:	mov    rcx,QWORD PTR [rbp-0x258]
   0x00000000004040f8 <+1544>:	mov    rsi,QWORD PTR [rcx+rax*8]
   0x00000000004040fc <+1548>:	mov    rdi,QWORD PTR [rbp-0x640]
   0x0000000000404103 <+1555>:	call   0x403560 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x0000000000404108 <+1560>:	mov    QWORD PTR [rbp-0x648],rax
   0x000000000040410f <+1567>:	jmp    0x404114 <main(int, char**)+1572>
   0x0000000000404114 <+1572>:	mov    eax,0x43b490
   0x0000000000404119 <+1577>:	mov    esi,eax
   0x000000000040411b <+1579>:	mov    rdi,QWORD PTR [rbp-0x648]
   0x0000000000404122 <+1586>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000404127 <+1591>:	mov    QWORD PTR [rbp-0x650],rax
   0x000000000040412e <+1598>:	jmp    0x404133 <main(int, char**)+1603>
   0x0000000000404133 <+1603>:	mov    eax,0x4033c0
   0x0000000000404138 <+1608>:	mov    esi,eax
   0x000000000040413a <+1610>:	mov    rdi,QWORD PTR [rbp-0x650]
   0x0000000000404141 <+1617>:	call   0x4035d0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000404146 <+1622>:	mov    QWORD PTR [rbp-0x658],rax
   0x000000000040414d <+1629>:	jmp    0x404152 <main(int, char**)+1634>
   0x0000000000404152 <+1634>:	jmp    0x40416b <main(int, char**)+1659>
   0x0000000000404157 <+1639>:	mov    ecx,edx
   0x0000000000404159 <+1641>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404160 <+1648>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404166 <+1654>:	jmp    0x4048e1 <main(int, char**)+3569>
   0x000000000040416b <+1659>:	movsxd rsi,DWORD PTR [rbp-0x2a4]
   0x0000000000404172 <+1666>:	lea    rdi,[rbp-0x248]
   0x0000000000404179 <+1673>:	call   0x4038c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt>
   0x000000000040417e <+1678>:	mov    QWORD PTR [rbp-0x660],rax
   0x0000000000404185 <+1685>:	jmp    0x40418a <main(int, char**)+1690>
   0x000000000040418a <+1690>:	mov    rax,QWORD PTR [rbp-0x660]
   0x0000000000404191 <+1697>:	mov    BYTE PTR [rax],0x20
   0x0000000000404194 <+1700>:	mov    eax,DWORD PTR [rbp-0x2a4]
   0x000000000040419a <+1706>:	add    eax,0x1
   0x000000000040419d <+1709>:	mov    DWORD PTR [rbp-0x2a4],eax
   0x00000000004041a3 <+1715>:	jmp    0x403fdb <main(int, char**)+1259>
   0x00000000004041a8 <+1720>:	mov    eax,0x656820
   0x00000000004041ad <+1725>:	mov    edi,eax
   0x00000000004041af <+1727>:	mov    eax,0x43b49b
   0x00000000004041b4 <+1732>:	mov    esi,eax
   0x00000000004041b6 <+1734>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004041bb <+1739>:	mov    QWORD PTR [rbp-0x668],rax
   0x00000000004041c2 <+1746>:	jmp    0x4041c7 <main(int, char**)+1751>
   0x00000000004041c7 <+1751>:	lea    rsi,[rbp-0x248]
   0x00000000004041ce <+1758>:	mov    rdi,QWORD PTR [rbp-0x668]
   0x00000000004041d5 <+1765>:	call   0x403560 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x00000000004041da <+1770>:	mov    QWORD PTR [rbp-0x670],rax
   0x00000000004041e1 <+1777>:	jmp    0x4041e6 <main(int, char**)+1782>
   0x00000000004041e6 <+1782>:	mov    eax,0x4033c0
   0x00000000004041eb <+1787>:	mov    esi,eax
   0x00000000004041ed <+1789>:	mov    rdi,QWORD PTR [rbp-0x670]
   0x00000000004041f4 <+1796>:	call   0x4035d0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004041f9 <+1801>:	mov    QWORD PTR [rbp-0x678],rax
   0x0000000000404200 <+1808>:	jmp    0x404205 <main(int, char**)+1813>
   0x0000000000404205 <+1813>:	jmp    0x40420a <main(int, char**)+1818>
   0x000000000040420a <+1818>:	lea    rax,[rbp-0x248]
   0x0000000000404211 <+1825>:	mov    rdi,rax
   0x0000000000404214 <+1828>:	mov    QWORD PTR [rbp-0x680],rax
   0x000000000040421b <+1835>:	call   0x403540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt>
   0x0000000000404220 <+1840>:	mov    QWORD PTR [rbp-0x2b0],rax
   0x0000000000404227 <+1847>:	mov    rdi,QWORD PTR [rbp-0x680]
   0x000000000040422e <+1854>:	call   0x403410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@plt>
   0x0000000000404233 <+1859>:	mov    QWORD PTR [rbp-0x2b8],rax
   0x000000000040423a <+1866>:	mov    ecx,0x43b4b0
   0x000000000040423f <+1871>:	mov    esi,ecx
   0x0000000000404241 <+1873>:	mov    ecx,0x6569d8
   0x0000000000404246 <+1878>:	mov    edx,ecx
   0x0000000000404248 <+1880>:	lea    rdi,[rbp-0x318]
   0x000000000040424f <+1887>:	call   0x404d80 <std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>
   0x0000000000404254 <+1892>:	jmp    0x404259 <main(int, char**)+1897>
   0x0000000000404259 <+1897>:	mov    eax,0x43b4b2
   0x000000000040425e <+1902>:	mov    edx,eax
   0x0000000000404260 <+1904>:	lea    rdi,[rbp-0x2f8]
   0x0000000000404267 <+1911>:	lea    rsi,[rbp-0x318]
   0x000000000040426e <+1918>:	call   0x404d30 <std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*)>
   0x0000000000404273 <+1923>:	jmp    0x404278 <main(int, char**)+1928>
   0x0000000000404278 <+1928>:	lea    rdi,[rbp-0x2d8]
   0x000000000040427f <+1935>:	lea    rsi,[rbp-0x2f8]
   0x0000000000404286 <+1942>:	mov    edx,0x10
   0x000000000040428b <+1947>:	call   0x404e60 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex<std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::regex_constants::syntax_option_type)>
   0x0000000000404290 <+1952>:	jmp    0x404295 <main(int, char**)+1957>
   0x0000000000404295 <+1957>:	mov    rdi,QWORD PTR [rbp-0x2b0]
   0x000000000040429c <+1964>:	mov    rsi,QWORD PTR [rbp-0x2b8]
   0x00000000004042a3 <+1971>:	lea    rdx,[rbp-0x2d8]
   0x00000000004042aa <+1978>:	xor    ecx,ecx
   0x00000000004042ac <+1980>:	call   0x404c60 <std::regex_search<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> > const&, std::regex_constants::match_flag_type)>
   0x00000000004042b1 <+1985>:	mov    BYTE PTR [rbp-0x681],al
   0x00000000004042b7 <+1991>:	jmp    0x4042bc <main(int, char**)+1996>
   0x00000000004042bc <+1996>:	lea    rdi,[rbp-0x2d8]
   0x00000000004042c3 <+2003>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x00000000004042c8 <+2008>:	lea    rdi,[rbp-0x2f8]
   0x00000000004042cf <+2015>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x00000000004042d4 <+2020>:	lea    rdi,[rbp-0x318]
   0x00000000004042db <+2027>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x00000000004042e0 <+2032>:	mov    al,BYTE PTR [rbp-0x681]
   0x00000000004042e6 <+2038>:	test   al,0x1
   0x00000000004042e8 <+2040>:	jne    0x4042f3 <main(int, char**)+2051>
   0x00000000004042ee <+2046>:	jmp    0x40436f <main(int, char**)+2175>
   0x00000000004042f3 <+2051>:	mov    rax,QWORD PTR ds:0x656a00
=> 0x00000000004042fb <+2059>:	mov    ecx,DWORD PTR [rax]
   0x00000000004042fd <+2061>:	add    ecx,0x1
   0x0000000000404300 <+2064>:	mov    rax,QWORD PTR ds:0x656a00
   0x0000000000404308 <+2072>:	mov    DWORD PTR [rax],ecx
   0x000000000040430a <+2074>:	jmp    0x40436f <main(int, char**)+2175>
   0x000000000040430f <+2079>:	mov    ecx,edx
   0x0000000000404311 <+2081>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404318 <+2088>:	mov    DWORD PTR [rbp-0x224],ecx
   0x000000000040431e <+2094>:	jmp    0x40435e <main(int, char**)+2158>
   0x0000000000404323 <+2099>:	mov    ecx,edx
   0x0000000000404325 <+2101>:	mov    QWORD PTR [rbp-0x220],rax
   0x000000000040432c <+2108>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404332 <+2114>:	jmp    0x404352 <main(int, char**)+2146>
   0x0000000000404337 <+2119>:	lea    rdi,[rbp-0x2d8]
   0x000000000040433e <+2126>:	mov    ecx,edx
   0x0000000000404340 <+2128>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404347 <+2135>:	mov    DWORD PTR [rbp-0x224],ecx
   0x000000000040434d <+2141>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x0000000000404352 <+2146>:	lea    rdi,[rbp-0x2f8]
   0x0000000000404359 <+2153>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x000000000040435e <+2158>:	lea    rdi,[rbp-0x318]
   0x0000000000404365 <+2165>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x000000000040436a <+2170>:	jmp    0x4048e1 <main(int, char**)+3569>
   0x000000000040436f <+2175>:	lea    rax,[rbp-0x340]
   0x0000000000404376 <+2182>:	mov    rdi,rax
   0x0000000000404379 <+2185>:	mov    QWORD PTR [rbp-0x690],rax
   0x0000000000404380 <+2192>:	call   0x403820 <_ZNSaIcEC1Ev@plt>
   0x0000000000404385 <+2197>:	mov    ecx,0x43b4b4
   0x000000000040438a <+2202>:	mov    esi,ecx
   0x000000000040438c <+2204>:	lea    rdi,[rbp-0x338]
   0x0000000000404393 <+2211>:	mov    rdx,QWORD PTR [rbp-0x690]
   0x000000000040439a <+2218>:	call   0x4036c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt>
   0x000000000040439f <+2223>:	jmp    0x4043a4 <main(int, char**)+2228>
   0x00000000004043a4 <+2228>:	lea    rdi,[rbp-0x340]
   0x00000000004043ab <+2235>:	call   0x4035f0 <_ZNSaIcED1Ev@plt>
   0x00000000004043b0 <+2240>:	lea    rdi,[rbp-0x360]
   0x00000000004043b7 <+2247>:	lea    rsi,[rbp-0x338]
   0x00000000004043be <+2254>:	mov    edx,0x10
   0x00000000004043c3 <+2259>:	call   0x404e60 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex<std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::regex_constants::syntax_option_type)>
   0x00000000004043c8 <+2264>:	jmp    0x4043cd <main(int, char**)+2269>
   0x00000000004043cd <+2269>:	lea    rax,[rbp-0x248]
   0x00000000004043d4 <+2276>:	mov    rdi,rax
   0x00000000004043d7 <+2279>:	mov    QWORD PTR [rbp-0x698],rax
   0x00000000004043de <+2286>:	call   0x403540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt>
   0x00000000004043e3 <+2291>:	mov    QWORD PTR [rbp-0x3f8],rax
   0x00000000004043ea <+2298>:	lea    rdi,[rbp-0x3f0]
   0x00000000004043f1 <+2305>:	lea    rsi,[rbp-0x3f8]
   0x00000000004043f8 <+2312>:	call   0x404f10 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE>
   0x00000000004043fd <+2317>:	mov    rdi,QWORD PTR [rbp-0x698]
   0x0000000000404404 <+2324>:	call   0x403410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@plt>
   0x0000000000404409 <+2329>:	mov    QWORD PTR [rbp-0x408],rax
   0x0000000000404410 <+2336>:	lea    rdi,[rbp-0x400]
   0x0000000000404417 <+2343>:	lea    rsi,[rbp-0x408]
   0x000000000040441e <+2350>:	call   0x404f10 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE>
   0x0000000000404423 <+2355>:	mov    rsi,QWORD PTR [rbp-0x3f0]
   0x000000000040442a <+2362>:	mov    rdx,QWORD PTR [rbp-0x400]
   0x0000000000404431 <+2369>:	lea    rdi,[rbp-0x3e8]
   0x0000000000404438 <+2376>:	lea    rcx,[rbp-0x360]
   0x000000000040443f <+2383>:	mov    r8d,0xffffffff
   0x0000000000404445 <+2389>:	xor    r9d,r9d
   0x0000000000404448 <+2392>:	call   0x404f50 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::regex_token_iterator(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> > const&, int, std::regex_constants::match_flag_type)>
   0x000000000040444d <+2397>:	jmp    0x404452 <main(int, char**)+2402>
   0x0000000000404452 <+2402>:	lea    rdi,[rbp-0x490]
   0x0000000000404459 <+2409>:	call   0x4050a0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::regex_token_iterator()>
   0x000000000040445e <+2414>:	jmp    0x404463 <main(int, char**)+2419>
   0x0000000000404463 <+2419>:	mov    eax,0x328
   0x0000000000404468 <+2424>:	mov    edi,eax
   0x000000000040446a <+2426>:	call   0x403230 <_Znam@plt>
   0x000000000040446f <+2431>:	mov    QWORD PTR [rbp-0x6a0],rax
   0x0000000000404476 <+2438>:	jmp    0x40447b <main(int, char**)+2443>
   0x000000000040447b <+2443>:	mov    rax,QWORD PTR [rbp-0x6a0]
   0x0000000000404482 <+2450>:	mov    QWORD PTR [rax],0x19
   0x0000000000404489 <+2457>:	add    rax,0x8
   0x000000000040448d <+2461>:	mov    rcx,rax
   0x0000000000404490 <+2464>:	add    rcx,0x320
   0x0000000000404497 <+2471>:	mov    rdx,rax
   0x000000000040449a <+2474>:	mov    QWORD PTR [rbp-0x6a8],rax
   0x00000000004044a1 <+2481>:	mov    QWORD PTR [rbp-0x6b0],rcx
   0x00000000004044a8 <+2488>:	mov    QWORD PTR [rbp-0x6b8],rdx
   0x00000000004044af <+2495>:	mov    rax,QWORD PTR [rbp-0x6b8]
   0x00000000004044b6 <+2502>:	mov    rdi,rax
   0x00000000004044b9 <+2505>:	mov    QWORD PTR [rbp-0x6c0],rax
   0x00000000004044c0 <+2512>:	call   0x4036d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
   0x00000000004044c5 <+2517>:	mov    rax,QWORD PTR [rbp-0x6c0]
   0x00000000004044cc <+2524>:	add    rax,0x20
   0x00000000004044d0 <+2528>:	mov    rdi,QWORD PTR [rbp-0x6b0]
   0x00000000004044d7 <+2535>:	cmp    rax,rdi
   0x00000000004044da <+2538>:	mov    QWORD PTR [rbp-0x6b8],rax
   0x00000000004044e1 <+2545>:	jne    0x4044af <main(int, char**)+2495>
   0x00000000004044e7 <+2551>:	mov    rax,QWORD PTR [rbp-0x6a8]
   0x00000000004044ee <+2558>:	mov    QWORD PTR [rbp-0x498],rax
   0x00000000004044f5 <+2565>:	mov    DWORD PTR [rbp-0x49c],0x0
   0x00000000004044ff <+2575>:	lea    rdi,[rbp-0x3e8]
   0x0000000000404506 <+2582>:	lea    rsi,[rbp-0x490]
   0x000000000040450d <+2589>:	call   0x405140 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::operator!=(std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> > const&) const>
   0x0000000000404512 <+2594>:	mov    BYTE PTR [rbp-0x6c1],al
   0x0000000000404518 <+2600>:	jmp    0x40451d <main(int, char**)+2605>
   0x000000000040451d <+2605>:	mov    al,BYTE PTR [rbp-0x6c1]
   0x0000000000404523 <+2611>:	test   al,0x1
   0x0000000000404525 <+2613>:	jne    0x404530 <main(int, char**)+2624>
   0x000000000040452b <+2619>:	jmp    0x404691 <main(int, char**)+2977>
   0x0000000000404530 <+2624>:	movsxd rax,DWORD PTR [rbp-0x49c]
   0x0000000000404537 <+2631>:	mov    rcx,QWORD PTR [rbp-0x498]
   0x000000000040453e <+2638>:	shl    rax,0x5
   0x0000000000404542 <+2642>:	add    rcx,rax
   0x0000000000404545 <+2645>:	lea    rdi,[rbp-0x548]
   0x000000000040454c <+2652>:	lea    rsi,[rbp-0x3e8]
   0x0000000000404553 <+2659>:	xor    edx,edx
   0x0000000000404555 <+2661>:	mov    QWORD PTR [rbp-0x6d0],rcx
   0x000000000040455c <+2668>:	call   0x405170 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::operator++(int)>
   0x0000000000404561 <+2673>:	jmp    0x404566 <main(int, char**)+2678>
   0x0000000000404566 <+2678>:	lea    rdi,[rbp-0x548]
   0x000000000040456d <+2685>:	call   0x405200 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::operator*() const>
   0x0000000000404572 <+2690>:	mov    QWORD PTR [rbp-0x6d8],rax
   0x0000000000404579 <+2697>:	jmp    0x40457e <main(int, char**)+2702>
   0x000000000040457e <+2702>:	lea    rdi,[rbp-0x4c0]
   0x0000000000404585 <+2709>:	mov    rsi,QWORD PTR [rbp-0x6d8]
   0x000000000040458c <+2716>:	call   0x405220 <std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const>
   0x0000000000404591 <+2721>:	jmp    0x404596 <main(int, char**)+2726>
   0x0000000000404596 <+2726>:	lea    rsi,[rbp-0x4c0]
   0x000000000040459d <+2733>:	mov    rdi,QWORD PTR [rbp-0x6d0]
   0x00000000004045a4 <+2740>:	call   0x403660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>
   0x00000000004045a9 <+2745>:	mov    QWORD PTR [rbp-0x6e0],rax
   0x00000000004045b0 <+2752>:	jmp    0x4045b5 <main(int, char**)+2757>
   0x00000000004045b5 <+2757>:	lea    rdi,[rbp-0x4c0]
   0x00000000004045bc <+2764>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x00000000004045c1 <+2769>:	lea    rdi,[rbp-0x548]
   0x00000000004045c8 <+2776>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x00000000004045cd <+2781>:	mov    eax,DWORD PTR [rbp-0x49c]
   0x00000000004045d3 <+2787>:	add    eax,0x1
   0x00000000004045d6 <+2790>:	mov    DWORD PTR [rbp-0x49c],eax
   0x00000000004045dc <+2796>:	jmp    0x4044ff <main(int, char**)+2575>
   0x00000000004045e1 <+2801>:	lea    rdi,[rbp-0x340]
   0x00000000004045e8 <+2808>:	mov    ecx,edx
   0x00000000004045ea <+2810>:	mov    QWORD PTR [rbp-0x220],rax
   0x00000000004045f1 <+2817>:	mov    DWORD PTR [rbp-0x224],ecx
   0x00000000004045f7 <+2823>:	call   0x4035f0 <_ZNSaIcED1Ev@plt>
   0x00000000004045fc <+2828>:	jmp    0x4048e1 <main(int, char**)+3569>
   0x0000000000404601 <+2833>:	mov    ecx,edx
   0x0000000000404603 <+2835>:	mov    QWORD PTR [rbp-0x220],rax
   0x000000000040460a <+2842>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404610 <+2848>:	jmp    0x4048d5 <main(int, char**)+3557>
   0x0000000000404615 <+2853>:	mov    ecx,edx
   0x0000000000404617 <+2855>:	mov    QWORD PTR [rbp-0x220],rax
   0x000000000040461e <+2862>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404624 <+2868>:	jmp    0x4048c9 <main(int, char**)+3545>
   0x0000000000404629 <+2873>:	mov    ecx,edx
   0x000000000040462b <+2875>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404632 <+2882>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404638 <+2888>:	jmp    0x4048bd <main(int, char**)+3533>
   0x000000000040463d <+2893>:	mov    ecx,edx
   0x000000000040463f <+2895>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404646 <+2902>:	mov    DWORD PTR [rbp-0x224],ecx
   0x000000000040464c <+2908>:	jmp    0x4048b1 <main(int, char**)+3521>
   0x0000000000404651 <+2913>:	mov    ecx,edx
   0x0000000000404653 <+2915>:	mov    QWORD PTR [rbp-0x220],rax
   0x000000000040465a <+2922>:	mov    DWORD PTR [rbp-0x224],ecx
   0x0000000000404660 <+2928>:	jmp    0x404680 <main(int, char**)+2960>
   0x0000000000404665 <+2933>:	lea    rdi,[rbp-0x4c0]
   0x000000000040466c <+2940>:	mov    ecx,edx
   0x000000000040466e <+2942>:	mov    QWORD PTR [rbp-0x220],rax
   0x0000000000404675 <+2949>:	mov    DWORD PTR [rbp-0x224],ecx
   0x000000000040467b <+2955>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x0000000000404680 <+2960>:	lea    rdi,[rbp-0x548]
   0x0000000000404687 <+2967>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x000000000040468c <+2972>:	jmp    0x4048b1 <main(int, char**)+3521>
   0x0000000000404691 <+2977>:	movsxd rax,DWORD PTR [rbp-0x49c]
   0x0000000000404698 <+2984>:	mov    ecx,0x20
   0x000000000040469d <+2989>:	mov    edx,ecx
   0x000000000040469f <+2991>:	mov    QWORD PTR [rbp-0x6e8],rax
   0x00000000004046a6 <+2998>:	mul    rdx
   0x00000000004046a9 <+3001>:	pushf  
   0x00000000004046aa <+3002>:	pop    rdx
   0x00000000004046ab <+3003>:	add    rax,0x8
   0x00000000004046af <+3007>:	mov    rsi,0xffffffffffffffff
   0x00000000004046b6 <+3014>:	cmovb  rax,rsi
   0x00000000004046ba <+3018>:	push   rdx
   0x00000000004046bb <+3019>:	popf   
   0x00000000004046bc <+3020>:	cmovo  rax,rsi
   0x00000000004046c0 <+3024>:	mov    rdi,rax
   0x00000000004046c3 <+3027>:	call   0x403230 <_Znam@plt>
   0x00000000004046c8 <+3032>:	mov    QWORD PTR [rbp-0x6f0],rax
   0x00000000004046cf <+3039>:	jmp    0x4046d4 <main(int, char**)+3044>
   0x00000000004046d4 <+3044>:	mov    rax,QWORD PTR [rbp-0x6f0]
   0x00000000004046db <+3051>:	mov    rcx,QWORD PTR [rbp-0x6e8]
   0x00000000004046e2 <+3058>:	mov    QWORD PTR [rax],rcx
   0x00000000004046e5 <+3061>:	add    rax,0x8
   0x00000000004046e9 <+3065>:	cmp    rcx,0x0
   0x00000000004046ed <+3069>:	mov    QWORD PTR [rbp-0x6f8],rax
   0x00000000004046f4 <+3076>:	je     0x40475c <main(int, char**)+3180>
   0x00000000004046fa <+3082>:	mov    rax,QWORD PTR [rbp-0x6e8]
   0x0000000000404701 <+3089>:	shl    rax,0x5
   0x0000000000404705 <+3093>:	mov    rcx,QWORD PTR [rbp-0x6f8]
   0x000000000040470c <+3100>:	add    rcx,rax
   0x000000000040470f <+3103>:	mov    rax,QWORD PTR [rbp-0x6f8]
   0x0000000000404716 <+3110>:	mov    QWORD PTR [rbp-0x700],rcx
   0x000000000040471d <+3117>:	mov    QWORD PTR [rbp-0x708],rax
   0x0000000000404724 <+3124>:	mov    rax,QWORD PTR [rbp-0x708]
   0x000000000040472b <+3131>:	mov    rdi,rax
   0x000000000040472e <+3134>:	mov    QWORD PTR [rbp-0x710],rax
   0x0000000000404735 <+3141>:	call   0x4036d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
   0x000000000040473a <+3146>:	mov    rax,QWORD PTR [rbp-0x710]
   0x0000000000404741 <+3153>:	add    rax,0x20
   0x0000000000404745 <+3157>:	mov    rdi,QWORD PTR [rbp-0x700]
   0x000000000040474c <+3164>:	cmp    rax,rdi
   0x000000000040474f <+3167>:	mov    QWORD PTR [rbp-0x708],rax
   0x0000000000404756 <+3174>:	jne    0x404724 <main(int, char**)+3124>
   0x000000000040475c <+3180>:	mov    rax,QWORD PTR [rbp-0x6f8]
   0x0000000000404763 <+3187>:	mov    QWORD PTR [rbp-0x550],rax
   0x000000000040476a <+3194>:	mov    DWORD PTR [rbp-0x554],0x0
   0x0000000000404774 <+3204>:	mov    eax,DWORD PTR [rbp-0x554]
   0x000000000040477a <+3210>:	cmp    eax,DWORD PTR [rbp-0x49c]
   0x0000000000404780 <+3216>:	jge    0x404824 <main(int, char**)+3380>
   0x0000000000404786 <+3222>:	movsxd rax,DWORD PTR [rbp-0x554]
   0x000000000040478d <+3229>:	mov    rcx,QWORD PTR [rbp-0x550]
   0x0000000000404794 <+3236>:	shl    rax,0x5
   0x0000000000404798 <+3240>:	add    rcx,rax
   0x000000000040479b <+3243>:	mov    rdx,QWORD PTR [rbp-0x498]
   0x00000000004047a2 <+3250>:	add    rdx,rax
   0x00000000004047a5 <+3253>:	mov    rdi,rcx
   0x00000000004047a8 <+3256>:	mov    rsi,rdx
   0x00000000004047ab <+3259>:	call   0x403250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt>
   0x00000000004047b0 <+3264>:	mov    QWORD PTR [rbp-0x718],rax
   0x00000000004047b7 <+3271>:	jmp    0x4047bc <main(int, char**)+3276>
   0x00000000004047bc <+3276>:	movsxd rax,DWORD PTR [rbp-0x554]
   0x00000000004047c3 <+3283>:	mov    rcx,QWORD PTR [rbp-0x550]
   0x00000000004047ca <+3290>:	shl    rax,0x5
   0x00000000004047ce <+3294>:	add    rcx,rax
   0x00000000004047d1 <+3297>:	mov    edx,0x656820
   0x00000000004047d6 <+3302>:	mov    edi,edx
   0x00000000004047d8 <+3304>:	mov    rsi,rcx
   0x00000000004047db <+3307>:	call   0x403560 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   0x00000000004047e0 <+3312>:	mov    QWORD PTR [rbp-0x720],rax
   0x00000000004047e7 <+3319>:	jmp    0x4047ec <main(int, char**)+3324>
   0x00000000004047ec <+3324>:	mov    eax,0x43b4ae
   0x00000000004047f1 <+3329>:	mov    esi,eax
   0x00000000004047f3 <+3331>:	mov    rdi,QWORD PTR [rbp-0x720]
   0x00000000004047fa <+3338>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004047ff <+3343>:	mov    QWORD PTR [rbp-0x728],rax
   0x0000000000404806 <+3350>:	jmp    0x40480b <main(int, char**)+3355>
   0x000000000040480b <+3355>:	jmp    0x404810 <main(int, char**)+3360>
   0x0000000000404810 <+3360>:	mov    eax,DWORD PTR [rbp-0x554]
   0x0000000000404816 <+3366>:	add    eax,0x1
   0x0000000000404819 <+3369>:	mov    DWORD PTR [rbp-0x554],eax
   0x000000000040481f <+3375>:	jmp    0x404774 <main(int, char**)+3204>
   0x0000000000404824 <+3380>:	mov    eax,0x656820
   0x0000000000404829 <+3385>:	mov    edi,eax
   0x000000000040482b <+3387>:	mov    eax,0x43b527
   0x0000000000404830 <+3392>:	mov    esi,eax
   0x0000000000404832 <+3394>:	call   0x403590 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000404837 <+3399>:	mov    QWORD PTR [rbp-0x730],rax
   0x000000000040483e <+3406>:	jmp    0x404843 <main(int, char**)+3411>
   0x0000000000404843 <+3411>:	lea    rdi,[rbp-0x490]
   0x000000000040484a <+3418>:	mov    rax,QWORD PTR [rbp-0x550]
   0x0000000000404851 <+3425>:	mov    ecx,DWORD PTR [rbp-0x24c]
   0x0000000000404857 <+3431>:	sub    ecx,0x1
   0x000000000040485a <+3434>:	movsxd rdx,ecx
   0x000000000040485d <+3437>:	mov    rsi,QWORD PTR [rbp-0x258]
   0x0000000000404864 <+3444>:	mov    QWORD PTR [rsi+rdx*8],rax
   0x0000000000404868 <+3448>:	mov    ecx,DWORD PTR [rbp-0x24c]
   0x000000000040486e <+3454>:	add    ecx,0x1
   0x0000000000404871 <+3457>:	mov    DWORD PTR [rbp-0x24c],ecx
   0x0000000000404877 <+3463>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x000000000040487c <+3468>:	lea    rdi,[rbp-0x3e8]
   0x0000000000404883 <+3475>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x0000000000404888 <+3480>:	lea    rdi,[rbp-0x360]
   0x000000000040488f <+3487>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x0000000000404894 <+3492>:	lea    rdi,[rbp-0x338]
   0x000000000040489b <+3499>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x00000000004048a0 <+3504>:	lea    rdi,[rbp-0x290]
   0x00000000004048a7 <+3511>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x00000000004048ac <+3516>:	jmp    0x403bfb <main(int, char**)+267>
   0x00000000004048b1 <+3521>:	lea    rdi,[rbp-0x490]
   0x00000000004048b8 <+3528>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x00000000004048bd <+3533>:	lea    rdi,[rbp-0x3e8]
   0x00000000004048c4 <+3540>:	call   0x4052f0 <std::__cxx11::regex_token_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, std::__cxx11::regex_traits<char> >::~regex_token_iterator()>
   0x00000000004048c9 <+3545>:	lea    rdi,[rbp-0x360]
   0x00000000004048d0 <+3552>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x00000000004048d5 <+3557>:	lea    rdi,[rbp-0x338]
   0x00000000004048dc <+3564>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x00000000004048e1 <+3569>:	lea    rdi,[rbp-0x290]
   0x00000000004048e8 <+3576>:	call   0x404ed0 <std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::~basic_regex()>
   0x00000000004048ed <+3581>:	jmp    0x404936 <main(int, char**)+3654>
   0x00000000004048f2 <+3586>:	mov    rdi,QWORD PTR [rbp-0x258]
   0x00000000004048f9 <+3593>:	call   0x4049d0 <submitParsedCsvFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >**)>
   0x00000000004048fe <+3598>:	jmp    0x404903 <main(int, char**)+3603>
   0x0000000000404903 <+3603>:	lea    rdi,[rbp-0x218]
   0x000000000040490a <+3610>:	call   0x4032b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>
   0x000000000040490f <+3615>:	jmp    0x404914 <main(int, char**)+3620>
   0x0000000000404914 <+3620>:	lea    rdi,[rbp-0x248]
   0x000000000040491b <+3627>:	mov    DWORD PTR [rbp-0x4],0x0
   0x0000000000404922 <+3634>:	mov    DWORD PTR [rbp-0x228],0x1
   0x000000000040492c <+3644>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x0000000000404931 <+3649>:	jmp    0x404947 <main(int, char**)+3671>
   0x0000000000404936 <+3654>:	lea    rdi,[rbp-0x248]
   0x000000000040493d <+3661>:	call   0x403440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   0x0000000000404942 <+3666>:	jmp    0x40495f <main(int, char**)+3695>
   0x0000000000404947 <+3671>:	lea    rdi,[rbp-0x218]
   0x000000000040494e <+3678>:	call   0x4032d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
   0x0000000000404953 <+3683>:	mov    eax,DWORD PTR [rbp-0x4]
   0x0000000000404956 <+3686>:	add    rsp,0x730
   0x000000000040495d <+3693>:	pop    rbp
   0x000000000040495e <+3694>:	ret    
   0x000000000040495f <+3695>:	lea    rdi,[rbp-0x218]
   0x0000000000404966 <+3702>:	call   0x4032d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
   0x000000000040496b <+3707>:	mov    rdi,QWORD PTR [rbp-0x220]
   0x0000000000404972 <+3714>:	call   0x403810 <_Unwind_Resume@plt>
End of assembler dump.
A debugging session is active.

	Inferior 1 [process 24555] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
